• What is React Js? 

-   React is a JavaScript library created by Facebook
    React is a User Interface (UI) library
    React is a tool for building UI components.
    
    In React, you develop your applications by creating reusable components that you can think of as 
    independent Lego blocks. These components are individual pieces of a final interface, which, when
    assembled, form the application’s entire user interface.

    React’s primary role in an application is to handle the view layer of that application just like the V
    in a model-view-controller (MVC) pattern by providing the best and most efficient rendering execution. 
    Rather than dealing with the whole user interface as a single unit, React.js encourages developers to 
    separate these complex UIs into individual reusable components that form the building blocks of the 
    whole UI. In doing so, the ReactJS framework combines the speed and efficiency of JavaScript with a 
    more efficient method of manipulating the DOM to render web pages faster and create highly dynamic and 
    responsive web applications.



• What is NPM in React Js? 

- NPM is short for node package manager, an online directory that contains
    the various already registered open-source packages. NPM modules consume
    the various functions as a third-party package when installed into an app
    using the NPM command npm install .



• What is Role of Node Js in react Js? 

- NodeJS is a framework of JavaScript which is mainly used for working with 
    the backend of our application or building the backend using JavaScript,
    whereas ReactJS is a JavaScript front-end library. It is mainly used for 
    building the user interface or the frontend of our application.



• What is CLI command In React Js? 

- (1) Creating a new application. Create React App provides multiple ways to create React application. ...

    (2) Selecting a template. Create React App creates React application using default template. ...

    (3) Installing a dependency....

    (4) Running the application.



• What is Components in React Js? 

- Components are independent and reusable bits of code. They serve the same purpose as JavaScript 
    functions, but work in isolation and return HTML. Components come in two types, Class components and
    Function components.



• What is Header and Content Components in React Js?

- Headers are compositions that extend standard navbar functionalities. They contain additional components
    like a jumbotron, sub-navbar, or image covers which serve as a containers for extra navigation elements
    - usually links, forms, or call-to-action buttons.

    Components are independent and reusable bits of code. They serve the same purpose as JavaScript 
    functions, but work in isolation and return HTML. Components come in two types, Class components and 
    Function components.



• How to install React Js on Windows, linux Operating System?
  
-  Install Node. js.
    = The Command Prompt Environment.
    = Open a Command Prompt in Windows.
    = Install React on Windows.
    = Run a React Project Application.


    = Go into your desired location where you want to start your react app using 'cd' command.
    = Run the below command to setup React app using npx. Command: npx create-react-app my-app. 
        That's it! Your React app is ready with a single command.



• How to install NPM and How to check version of NPM?

- Specify the module you want to install and its required version so once the command "npm install" is 
    executed, the mentioned package will be installed with all other packages.

- open the package json. Take a look under the dependencies section. It should list all of the 
    dependencies of your project and one of those should be React.



• How to check version of React Js? 

- Run the command " npm list react or npm ls react " from the root directory of your project.



• How to change in components of React Js?

- Create an ES6 class, with the same name, that extends React.Component. Add a single empty method to it 
    called render(). Move the body of the function into the render() method. Replace props with this props 
    in the render() body.